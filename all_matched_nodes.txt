* when flag clicked (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* when I receive <node_value> (1)
* if <condition> then block (1)
* hide (1)
* not <node_variable> = <value> (1)
* when this sprite clicked (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* if <condition> then block (1)
* hide (1)
* when flag clicked (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* when I receive <node_value> (1)
* if <condition> then block (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* custom script call (1)
* Item <value> of <node_list> (6)
* when I receive <node_value> (1)
* custom script call (1)
* item <node_value> of <node_list> (6)
* <node_value> * <value> (6)
* <node_value> + <value> (6)
* when I receive <node_value> (1)
* custom script call (1)
* custom function call (2)
* set <node_variable> to <value> (3)
* broadcast <node_value> (1)
* wait <value> seconds (1)
* if <condition> then block else block (1)
* <node_variable> = <value> operator node (1)
* define <nodes_value> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* show (1)
* set size to <node_value> % (1)
* go to <node_value> layer (1)
* go to x <node_value> y <node_value> (2)
* if <condition> then block (2)
* <node_value> = <value> operator (1)
* delete this clone (1)
* for each <node_value> in <node_value> (1)
* switch costume to <node_value> (2)
* join <node_value> <node_value> (2)
* change y by <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* item <node_value>  of <node_list> (8)
* <node_variable> * <value> (8)
* <node_value> + <value> (8)
* when I receive <node_value> (1)
* custom function call (1)
* item <value> of <node_list> (8)
* when flag clicked (1)
* go to x: <value> y:<value> (1)
* switch costume to <node_value> (1)
* set size to <value> % (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variables> to <value> (2)
* show (1)
* set size to <node_value> % (1)
* go to <node_value> layer (1)
* go to x <node_value> y <node_value> (2)
* if <condition> then (1)
* <node_value> = <value> operator (1)
* delete this clone (1)
* for each <node_value> in <node_value> (2)
* length of <node_list> (1)
* length of <node_value> (1)
* switch costume to <node_value> (3)
* join <node_value> <node_value> (1)
* item <node_variable> of <node_list> (3)
* change x by <node_value> (1)
* change y by <node_value> (1)
* letter <node_variable> of <node_value> (2)
* custom script call (1)
* item <value> of <node_value> (6)
* custom script call (1)
* item <node_variable> of <node_list> (6)
* <node_variable> * <value> (6)
* <node_value> + <value> (6)
* when flag clicked (1)
* go to x: <value> y: <value> (1)
* switch costume to <node_value> (1)
* set size to <value> % (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_value> to <value> (2)
* show (1)
* set size to <node> % (1)
* go to <node> layer (1)
* go to x: <node_value> y: <node_value> (2)
* if <condition> then block (1)
* delete this clone (1)
* for each <node_value> in <node_value> (2)
* length of <node_value> (1)
* switch costume to <node_value> (3)
* create clone of <node_value> (1)
* change x by <node_value> (1)
* change y by <node_value> (1)
* <value> - <node_value> (1)
* item of <node_list> (3)
* letter <node_value> of <nod_value> (1)
* <value> + <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variable (1)
* define <node_values> (1)
* set <node_variable> to <node_value> (3)
* set <node_variable> to <value> (3)
* repeat until <condition> (2)
* letter of <node_value> (2)
* <node_value> = <node_value> (1)
* <node_value> = <value> (1)
* change <node_variable> by <value> (2)
* item <node_variable> of <node_list> (2)
* broadcast <node_value> (1)
* define <node_values> (1)
* add <node_value> to <node_list> (1)
* join <node_value> <node_value> (3)
* custom script call (1)
* node_variable (2)
* define <node_values> (1)
* set <node_variable> to <value> (2)
* repeat until <condition> (1)
* letter <value> of <node_value> (1)
* <node_value>=<node_value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (2)
* when flag clicked (1)
* hide (1)
* when flag clicked (1)
* set <node_variable> to <value> (4)
* delete all of <nodes_value> (1)
* if <condition> then block (4)
* not <node_value> (4)
* <node_value>=<value> (5)
* <node_value> of <node_value> (5)
* <node_value> and <node_value> (1)
* add <value> to <node_list> (4)
* delete all of <node_list> (2)
* define <node_values> (1)
* set <node_variable> to <node_value> (7)
* for each <node_value> in <node_value> (1)
* if <condition> then block (4)
* not <node_value> (1)
* letter <node_variable> of <node_value> (5)
* <node_value> > <node_value> (1)
* <node_value> = <value> (4)
* wait until <node_variable> (1)
* when I receive <node_value> (1)
* if <condition> then block else block (1)
* set volume to <value> % (2)
* set <node_value> effect to <node_value> (1)
* play sound <node_value> until done (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_varible (1)
* if <condition> then block (1)
* not <node_value> (1)
* <node_variable> = <value> (1)
* define <node_values> (1)
* set <node_variable> to <value> (2)
* set <node_variable> to <value> (3)
* if <condition> then (1)
* repeat until <condition> (1)
* <node_variable>=<node_variable> (2)
* pick random <node_value> to <node_value> (2)
* when I receive <node_value> (1)
* custom script call (1)
* node_variable (2)
* define <node_values> (1)
* set <node_variable> to <value> (2)
* set <node_variable> to <node_value> (1)
* for each <node_variable> in <node_value> (1)
* if <condition> then block (1)
* not <node_value> (1)
* <node_value> contains <node_value> (1)
* letter <node_variable> of <node_value> (2)
* join <node_values> <node_values> (1)
* custom script call (1)
* when I receive <node_value> (1)
* custom script call (1)
* when I receive <node_value> (1)
* custom script call (1)
* define <node_values> (1)
* custom script call (1)
* define <node_values> (1)
* custom script call (1)
* when I receive <node_values> (1)
* set <node_variable> to <value> (2)
* set <node_value> to <value> (1)
* custom script call (2)
* set <node_variable> to <value> (1)
* set <node_variable>to <node_value> (1)
* if <condition> then block (1)
* reset timer (1)
* repeat until <condition> (1)
* <node_variable>  >  value (1)
* when I receive <node_value> (1)
* custom script call (2)
* if <condition> then block else block (1)
* not <node_value> (1)
* set <node_variable> to <node_value> (3)
* join <node_value> <node_value> (2)
* join <node_value> <value> (2)
* when flag clicked (1)
* hide (1)
* go to x:<value>y:<value> (1)
* define <node_values> (1)
* set <node_value> to <value> (4)
* set <node_variable> to <node_value> (2)
* repeat until <condition> (1)
* change <node_value> by <value> (1)
* length of <node_variable> (1)
* <node_value> = <node_value> (1)
* join <node_variable> <node_value> (1)
* <node_value> - <node_value> (1)
* letter <node_variable> of <node_value> (1)
* custom script call (1)
* node_variables (3)
* define <node_values> (1)
* set <node_variable> to <value> (4)
* set <node_variable> to <node_value> (2)
* for each <node_variable> in <node_value> (1)
* if <condition> then block else block (1)
* repeat until <condition> (1)
* change <node_variable> by <value> (1)
* letter <node_variable> of <node_value> (5)
* join <node_variable> <node_value> (2)
* <node_value> contains <node_value> ? (1)
* <node_value> = <node_value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (3)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api call <erase all> (1)
* when this sprite clicked (1)
* if <condition_node> then block (2)
* <node_value> = <value> (2)
* switch costume to <node_value> (2)
* hide (2)
* broadcast <node_value> (2)
* stop <node_value> (2)
* set <node_value> to <value> (2)
* pen extension api call <stamp> (2)
* when I receive <node_value> (1)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* pen extension api call <erase all> (1)
* when this sprite clicked (1)
* if <condition> then block (2)
* <node_variable> =  <value> (2)
* switch costume to <node_value> (2)
* pen extension api call <stamp> (2)
* set <node_variable> to <value> (2)
* hide (2)
* stop <node_value> (2)
* broadcast <node_value> (2)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api call <erase all> (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* if <condition> then block (2)
* <node_variable> = <value> (2)
* switch costume to <node_value> (2)
* set <node_variable> to <value> (2)
* hide (2)
* pen extension api call <stamp> (2)
* broadcast <node_value> (2)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when this sprite clicked (1)
* if <condition> then block (2)
* <node_variable> = <value> (2)
* set <node_variable> to <value> (2)
* hide (2)
* switch costume to <node_value> (2)
* pen extension api <stamp> (2)
* stop <node_value> (2)
* broadcast <node_value> (2)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when this sprite clicked (1)
* if <condition> then block (2)
* <node_variable> = <value> (2)
* set <node_variable> to <value> (2)
* hide (2)
* switch costume to <node_value> (2)
* pen extension api <stamp> (2)
* stop <node_value> (2)
* broadcast <node_value> (2)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when I receive <node_changes> (1)
* show (1)
* when this sprite clicked (1)
* if <condition> then block (2)
* <node_variable> = <value> (2)
* pen extension api call <stamp> (2)
* set <node_variable> to <value> (2)
* broadcast <node_value> (2)
* hide (2)
* stop <node_value> (2)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api call <erase all> (1)
* when this sprite clicked (1)
* if <condition> then block (2)]
* <node_value> = <value> (2)
* pen extension api call <stamp> (2)
* set <node_variable> to <value> (2)
* broadcast <node_value> (2)
* hide (2)
* stop <node_value> (2)
* when I receive <node_value> (1)
* show (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api call (1)
* when this sprite clicked (1)
* <node_variable> = <value> (2)
* if <condition> then block (2)
* switch costume to <node_value> (2)
* hide (2)
* pen extension api call (2)
* set <node_variable> to <value> (2)
* broadcast <node_value> (2)
* stop <node_value> (2)
* when I receive <node_value> (1)
* show (1)
* broadcast <node_value> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api call (1)
* when this sprite clicked (1)
* <node_variable> = <value> (2)
* if <condition> then block (2)
* switch costume to <node_value> (2)
* hide (2)
* pen extension api call (2)
* set <node_variable> to <value> (2)
* broadcast <node_value> (2)
* stop <node_value> (2)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* hide (1)
* set <node_variable> to <value> (1)
* switch costume to <node_value> (4)
* forever block (1)
* if <condition> then block (4) = > nested
* <node_variable> = <value> (5)
* not <node_value> (2)
* <node_value> or <node_value> (1)
* when I receive <node_value> (1)
* switch costume to <node_value> (1)
* when I receive <node_value> (1)
* switch costume to <node_value> (1)
* when I receive <node_value> (1)
* if <condition> then block (1)
* switch costume to <node_value> (1)
* set <node_variable> to <value> (1)
* <node_variable> = <value> (1)
* when I receive <node_value> (1)
* if <condition> then (1)
* switch costume to <node_value> (1)
* set <node_variable> to <value> (1)
* <node_variable> = <value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* wait <value> seconds (1)
* stop <node_value> (1)
* when I receive <node_value> (1)
* show (1)
* wait <value> seconds (1)
* stop <node_value> (1)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* hide (1)
* when this sprite clicked (1)
* if <condition> then block else block (1)
* broadcast <node_value> (1)
* pick random <value> to <value> (1)
* <node_value> = <value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_valaue> (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
*  show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_change> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* next costume (2)
* wait <value> seconds (1)
* when this sprite clicked (1)
* next costume (2)
* wait <value> seconds (1)
* if <condition> then block (1)
* not <node_value> (1)
* length of <node_variable> (1)
* <node_value> = <node_variable> (1)
* set <node_variable> to <node_value> (1)
* join <node_variable><value> (1)
* broadcast <node_value> (1)
* when this sprite clicked (1)
* next costume (2)
* wait <value> seconds (1)
* if <condition> then block (1)
* not <node_value> (1)
* length of <node_variable> (1)
* <node_value> = <node_variable> (1)
* set <node_variable> to <node_value> (1)
* join <node_variable> <value> (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* next costume (2)
* wait <value> seconds (1)
* when this sprite clicked (1)
* next costume (2)
* wait <value> seconds (1)
* if <condition> then block (1)
* not <node_value> (1)
* length of <node_variable> (1)
* <node_value> = <node_variable> (1)
* set <node_variable> to <node_value> (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* next costume (2)
* wait <value> seconds (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* next costume (2)
* wait <value> seconds (1)
* if <condition> then block (1)
* not <node_value> (1)
* length of <node_variable> (1)
* <node_value> = <node_variable> (1)
* join <node_variable> <node_value> (1)
* broadcast <node_value> (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* next costume (2)
* wait <value> seconds (1)
* when this sprite clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* if <condition> then block (1)
* <node_variable> = <node_value> (1)
* wait <value> seconds (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* show (1)
* wait <value> seconds (2)
* if <condition> then block (2)
* <node_variable> = <value> (2)
* switch costume to <node_value> (3)
* hide (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* switch costume to <node_value>  (3)
* wait <value> seconds (2)
* show (1)
* hide (1)
* if <node_variable> = <value> (2)
* broadcast <node_value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when this sprite clicked (1)
* ask <value> and wait (2)
* set <node_variable> to <node_value> (2)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* if <condition> then block (1)
* <node_value> = <value> (1)
* set <node_variable> to <value> (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* if <condition> then block (1)
* set <node_variable> to <value> (1)
* <node_variable> = <value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when flag clicked (1)
* hide (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* wait <value> seconds (1)
* go to <node_value> layer (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* delete all of <node_list> (1)
* show (1)
* pen extension api <eraseall> (1)
* when flag clicked (1)
* delete all of <node_list> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when this sprite clicked (1)
* add <value> to <node_list> (1)
* next costume (2)
* wait <value> seconds (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* when I receive <node_value> (1)
* if <condition> then block else block (1)
* hide (2)
* pen extension api <stamp> (1)
* add <value> to <node_list> (1)
* when flag clicked (1)
* delete all of <node_list> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when this sprite clicked (1)
* add <value> to <node_list> (1)
* next costume (2)
* wait <value> seconds (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* when I receive <node_value> (1)
* if <condition> then block else block (1)
* not <node_variable> (1)
* <node_value> = <value> (1)
* hide (2)
* add <value> to <node_list> (1)
* pen extension api <stamp> (1)
* when I receive <node_value> (1)
* delete all of <node_list> (1)
* show (1)
* pen extension api <erase all> (1)
* when flag clicked (1)
* delete all of <node_list> (1)
* switch costume to <node_value> (1)
* hide (1)
* pen extension api <erase all> (1)
* when I receive <node_value> (1)
* delete all of <node_list> (1)
* show (1)
* pen extension api <erase all> (1)
* when I receive <node_value> (1)
* if <condition> then block else block (1)
* not <node_value> (1)
* hide (2)
* <node_value> = <value> (1)
* add <value> to <node_list> (1)
* when this sprite clicked (1)
* add <value> to <node_list> (1)
* next costume (2)
* wait <value> seconds (1)
* broadcast <node_value> (2)
* set <node_variable> to <value> (2)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variable (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <node_value> (3)
* set <node_variable> to <value> (3)
* repeat until <condition> (2)
* letter <value> of <node_value> (1)
* letter <node_variable> of <node_value> (1)
* item <node_variable> of <node_list> (2)
* <node_value> = <node_value> (1)
* <node_value> = <value> (1)
* change <node_variable> by <value> (2)
* broadcast <node_values> (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* add <node_value> to <node_list> (1)
* join <node_value> <node_value> (1)
* join <node_value> <value> (1)
* join <value> <node_value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (2)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (2)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* repeat until <condition> (1)
* letter <value> of <node_value> (1)
* <node_value> = <node_value> (1)
* change <node_variable> by <value> (1)
* item <node_variable> of <node_list> (1)
* replace item <node_variable> of <node_list> with <node_value> (1)
* join <node_value> <value> (1)
* join <value> <node_value> (1)
* join <node_value> <node_value> (1)
* when flag clicked (1)
* set <node_variable> to <value> (4)
* delete all of <node_list> (1)
* if <condition> then block (4)
* not <node_value> (4)
* <node_value> of <node_value> (5)
* <node_value> = <value> (5)
* <node_value> and <node_value> (1)
* add <value> to <node_list> (4)
* define <node_values> (1)
* set <node_variable> to <value> (7)
* for each <node_variable> in <node_value> (1)
* if <condition> then block (4)
* not <node_value> (1)
* letter <node_variable> of <node_value> (5)
* <node_value> > <value> (1)
* <node_value> = <value> (4)
* <node_value> * <value> (1)
* wait until <node_val> (1)
* broadcast <node_value> (1)
* when I receive <node_value> (1)
* if <condition> then block else block (1)
* <node_variable> = <value> (1)
* set volume to <value> % (2)
* set <node_value> effect to <node_variable> (1)
* play sound <node_value> until done (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variable (1)
* if <condition> then block (1)
* not <node_value> (1)
* <node_variable> = <value> (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* set <node_variable> to <node_value> (2)
* pick random <node_value> to <node_value> (2)
* <node_variable> = <node_variable> (2)
* if <condition> then block (1)
* repeat until <condition> (1)
* not <node_value> (1)
* <node_variable> = <node_variable> (2)
* repeat until <condition> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (2)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* set <node_variable> to <node_value> (1)
* for each <node_variable> in <node_value> (1)
* length of <node_value> (1)
* if <condition> then block (1)
* not <node_value> (1)
* <node_value> contains <node_value> (1)
* join <node_variable> <node_value> (1)
* letter <node_variable> of <node_value> (2)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (2)
* when I receive <node_value> (1)
* custom script call (1)
* when I receive <node_value> (1)
* custom script call (1)
* define <node_values> (1)
* Created by <value> (1)
* custom script call (1)
* define <node_values> (1)
* Created by <value> (1)
* custom script call (1)
* when I receive <node_value> (1)
* custom script call (2)
* set <node_variable> to <value> (1)
* set <node_variable> to <node_value> (1)
* if <condition> then block (1)
* not <node_value> (1)
* <node_variable> > <value> (1)
* <node_variable> = <value> (1)
* reset timer (1)
* repeat until <condition> (1)
* when I receive <node_value> (1)
* set <node_variable> to <value> (2)
* when I receive <node_value> (1)
* set <node_variable> to <value> (1)
* when I receive <node_value> (1)
* custom script call (2)
* if <condition> then block else block (1)
* not <node_value> (1)
* <node_value> > <value> (1)
* set <node_variable> to <node_value> (3)
* join <node_value> <node_value> (2)
* join <node_value> <value> (1)
* join <node_variable> <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (3)
* define <node_values> (1)
* set <node_variable> to <value> (4)
* set <node_variable> to <node_value> (2)
* repeat until <condition> (1)
* length of <node_variable> (1)
* <node_variable> = <node_value> (1)
* <node_value> -  <node_value> (1)
* letter <node_variable> of <node_value> (1)
* join <node_variable> <node_value> (1)
* change <node_variable> by <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* node_variables (3)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (4)
* set <node_variable> to <node_value> (2)
* for each <node_variable> in <node_value> (1)
* if <condition> then block else block (1)
* length of <node_value> (1)
* letter <node_variable> of <node_value> (5)
* <node_value> contains <node_value> (1)
* change <node_variable> by <value> (1)
* <node_value> = <node_value> (1)
* join <node_variable> <node_value> (2)
* when I receive <node_value> (1)
* custom script call (1)
* when I receive <node_value> (1)
* custom script call (2)
* set <node_variable> to <value> (3)
* broadcast <node_value> (1)
* wait <value> seconds (1)
* if <condition> then block else block (1)
* <node_variable> = <value> (1)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* show (1)
* set size to <node_value> (1)
* go to x: <node_value> y: <node_value> (2)
* if <condition> then (2)
* delete this clone (1)
* for each <node_variable> in <node_value> (1)
* switch costume to <node_value> (2)
* create clone of <node_value> (1)
* change x by <node_value> (1)
* change y by <node_value> (1)
* join <node_value> <node_value> (2)
* length of <node_value> (1)
* letter <node_variable> of <node_value> (4)
* <node_value> = <node_value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* item <node_variable> of <node_list> (8)
* <node_variable> * <value> (8)
* <node_value> + <value> (8)
* when I receive <node_value> (1)
* custom script call (1)
* item <value> of <node_list> (8)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* show (1)
* set size to <node_value> %  (1)
* go to <node_value> layer (1)
* go to x: <node_value> y: <node_value> (2)
* if <condition> then (1)
* delete this clone (1)
* for each <node_variable> in <node_list> (1)
* for each <node_variable> in <node_value>  (1)
* length of <node_value> (1)
* letter <node_variable> of <node_value> (2)
* join <node_value> <node_value> (1)
* item <node_variable> of <node_list> (2)
* item <node_value> of <node_list> (1)
* <node_variable> + <value> (1)
* switch costume to <node_value> (3)
* create clone of <node_value> (1)
* change x by <node_value> (1)
* change y by <node_value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* item <value> of <node_list> (6)
* when I receive <node_value> (1)
* custom script call (1)
* item <node_value> of <node_list> (6)
* <node_value> + <node_value> (6)
* <node_value> * <node_value> (6)
* when flag clicked (1)
* go to x: <value> y: <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* item <value> of <node_list> (6)
* when I receive <node_value> (1)
* custom script call (1)
* item <node_value> of <node_list> (6)
* <node_variable> * <value> (6)
* <node_value> + <value> (6)
* define <node_values> (1)
* Created by <value> (1)
* Description <value> (1)
* set <node_variable> to <value> (2)
* show (1)
* set size to <node_value> % (1)
* go to <node_value> layer (1)
* go to x: <node_value> y: <node_value> (2)
* if <node_value> then (1)
* delete this clone (1)
* for each <node_variable> in <node_value> (2)
* length of <node_list> (1)
* item <node_variable> of <node_list> (2)
* item <node_value> of <node_list> (1)
* item # of <node_value> (1)
* <node_value> + <value> (1)
* create clone of <node_value> (1)
* change x by <node_value> (1)
* change y by <node_value> (1)
* <value> - <node_value> (1)
* when I receive <node_value> (1)
* switch costume to <node_value> (1)
* show (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* switch costume to <node_value> (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* when flag clicked (1)
* hide (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* wait <value> seconds (1)
* if  <condition> then block (3)
* <node_value> or <node_value> (4)
* <node_variable> = <value> (9)
* <node_value> = <node_value> (1)
* switch costume to <node_value> (3)
* show (3)
* item # of <value> in <node_list> (1)
* forever block (1)
* when flag clicked (1)
* say <value> for <value> seconds (1)
* ask <value> and wait (1)
* say <node_value> (1)
* when flag clicked (1)
* forever block (1)
* switch backdrop to <node_value> (1)
* wait <value> seconds (1)
* when flag clicked (1)
* forever block (1)
* start sound <node_value> (2)
* wait <value> seconds (1)
* if <condition> then (1)
* touching <node> (1)
* when flag clicked (1)
* forever block (1)
* switch backdrop to <node_value> (1)
* wait <value> seconds (1)
* switch backdrop to <node_value> (1)
* wait <value> seconds (1)
* set <node_variable> to <value> (1)
* start sound <node_value> (2)
* wait <value> seconds (1)
* if <condition> then block (1)
* set rotation style <node_value> (1)
* next costume (2)
* if on edge, bounce (1)
* move <value> steps (1)
* when flag clicked (1)
* forever (1)
* next costume (1)
* move <value> steps (1)
* when flag clicked (1)
* set <node_variable> to <value> (10)
* define <values> (1)
* go to x: <node_value> y: <node_value> (1)
* <node_variable> + <node_value> (2)
* <node_value> * <node_value> (2)
* set <node_variable> to <node_value> (2)
* when <node_value> key pressed (1)
* set <node_variable> to <variable> (1)
* set <node_variable> to <value> (1)
* custom script call (3)
* round <node_value> (2)
* <node_variable> / <value> (2)
* <node_variable> = <value> (1)
* repeat until <condition> (1)
* node_variable (3)
* define <values> (1)
* if <condition> then block (1)
* if <condition> then block else block (3)
* key <node_value> pressed (4)
* set <node_variable> to <variable> (4)
* define <node_values> (1)
* if <condition> then block else block (3)
* if <condition> then block (1)
* <node_value> = <node_variable> (5)
* custom script call (4)
* <node_value> - <value> (2)
* <node_value> + <value> (2)
* when flag clicked (1)
* hide (1)
* define <values> (1)
* go to x: <node_value> y: <node_value> (1)
* set <node_variable> to <node_value> (2)
* when I receive <node_value> (1)
* custom script call (1)
* pick random <value> to <node_value> (2)
* <node_variable> - <value> (2)
* show (1)
* define <values> (1)
* if <condition> then block else block (3)
* <node_value> = <node_variable> (4)
* <node_value> + <value> (2)
* <node_value> - <value> (2)
* if <condition> then block (1)
* custom script call (4)
* define <values> (1)
* if <condition> then block else block (1)
* set <node_variable> to <value> (2)
* <node_value> < <value> (2)
* <node_value> > <node_variable> (2)
* <node_variable> - <value> (2)
* <node_value> or <node_value> (2)
* set <node_variable> to <value> (1)
* broadcast <node_value> (2)
* custom script call (1)
* if <condition> then block (2)
* <node_variable> = <node_variable> (2)
* <node_value> and <node_value> (1)
* node_variable (3)
* define <values> (1)
* go to x: <node_value> y: <node_value> (1)
* replace item <node_variable> of <node_list> with <node_value> (2)
* <node_variable> + <node_value> (2)
* <node_value> * <node_variable> (2)
* define <values> (1)
* pen extension api call <erase all> (1)
* pen extension api call <stamp> (1)
* set <node_variable> to <node_list> (1)
* repeat <node_value> (1)
* if <node_variable> then block else block (1)
* custom script call (2)
* node_variable (2)
* item <node_value> of <node_list> (2)
* <node_variable> - <value> (2)
* show (1)
* hide (1)
* change <node_variable> by <value> (1)
* <node_variable> = <value> (1)
* when I receive <node_value> (1)
* custom script call (1)
* when flag clicked (1)
* hide (1)
* delete all of <node_list> (2)
* set <node_variable> to <node_variable> (2)
* change <node_variab le> by <value> (1)
* custom script call (1)
* if <condition> then block else block (1)
* broadcast <node_value> (1)
* define <values> (1)
* set <node_value> to <value> (1)
* when I receive <node_value> (1)
* custom script (1)
* not <node_value> (4)
* <node_variable> = <node_variable> (4)
* <node_value> and <node_value> (4)
* pen extension api call <erase all> (1)
* hide (1)
* when I receive <node_value> (1)
* custom script call (1)
* define <values> (1)
* show (1)
* hide variable <variable_name> (3)
* delete all of <node_list> (2)
* set <node_variable> to <value> (2)
* set <node_variable> to <variable> (3)
* custom script call (5)
* round <node_value> (2)
* <node_variable> / <value> (2)
* <node_variable> = <value> (2)
* repeat until <condition> (1)
* if <condition> then block (1)
* if <condition> then block else block (1)
* broadcast <node_values> (3)
* <node_variable> = <node_variable> (2)
* <node_variable> and <node_variable> (1)
* <node_value> and <node_value> (1)
* show variable <node_variable> (3)
* set <node_variable> to <node_variable> (1)
* set <node_variable> to <node_value> (1)
* ask <value> and wait (1)
* <node_variable> < <node_variable> (1)
* if <condition> then block (1)
* start sound <node_value> (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* hide (1)
* when flag clicked (1)
* go to x: <value> y: <value> (1)
* show (1)
* when I receive <node_value> (1)
* show (1)
* when this sprite clicked (1)
* broadcast <node_value> (1)
* hide (1)
* when flag clicked (1)
* go to x: <value> y: <value> (1)
* hide (1)
* when flag clicked (1)
* go to x: <value> y: <value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when I receive <node_value> (1)
* hide (1)
* when flag clicked (1)
* switch costume to <node_value> (1)
* set <node_variable> to <value> (2)
* repeat until <condition> (1)
* set volume to <node_variable> % (1)
* play sound <node_value> until done (1)
* when this sprite clicked (1)
* if <condition> then block else block (1)
* <node_variable> = <value> (2)
* switch costume to <node_value> (2)
* set <node_variable> to <value> (2)
* repeat until <condition> (1)
* set volume to <node_variable> % (1)
* set volume to <value> % (1)
* play sound <node_value> until done (1)
* when I receive <node_value> (1)
* hide (1)
* when I receive <node_value> (1)
* show (1)
* when flag clicked (1)
* start sound <node_value> (1)
* start sound <node_value> (1)
* repeat <value> block (1)
* play sound <node_value> until done (1)
* wait <value> seconds (1)
* repeat <value> (1)
* move <value> steps (1)
* when flag clicked (1)
* ask <value> and wait (1)
* set <node_variable> to <node_value> (1)
* if <condition> then block (8)
* <node_variable> = <value> (7)
* <node_variable> < <value> (1)
* <node_variable> > <value> (1)
* say <value> (1)
* say <value> for <value> seconds (8)
